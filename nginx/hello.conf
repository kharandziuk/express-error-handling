upstream backend {
  server backend:3000;
  keepalive 512;

}

upstream blog {
  server blog:3000;
  keepalive 512;

}

server {

    listen 80;
    listen [::]:80 default_server ipv6only=on;

    # index files
    index index.html;

    # domain names, make sure to set the A Record on your domain's DNS settings to
    # your server's IP address, you can test if was set properly by using the `dig`
    # command: dig example.com
    server_name example.com example;
    proxy_intercept_errors on; 

    # timeout for closing keep-alive connections
    keepalive_timeout 10;

    # turn off sendfile in vagrant environments
    sendfile off;

    # enable gzip compression
    gzip on;
    gzip_http_version 1.1;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_buffers 16 8k;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";

    # max upload size
    # client_max_body_size 16M;

    # change access and error log files.
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;

    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/public;
        internal;
    }

    location = /404.html {
        root /var/www/public;
        internal;
    }

    location /blog/ {
        # set this to your upstream module.
        proxy_pass http://blog/;
        # headers to pass to proxy server
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        proxy_http_version 1.1;
        proxy_redirect off;
        # go to next upstream after if server down
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_connect_timeout 5s;
        # gateway timeout
        proxy_read_timeout 20s;
        proxy_send_timeout 20s;
        # buffer settings
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;

    }

    location /api/ {
        # set this to your upstream module.
        proxy_pass http://backend/ ;
        # headers to pass to proxy server
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        proxy_http_version 1.1;
        proxy_redirect off;
        # go to next upstream after if server down
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_connect_timeout 5s;
        # gateway timeout
        proxy_read_timeout 20s;
        proxy_send_timeout 20s;
        # buffer settings
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;

    }
}
